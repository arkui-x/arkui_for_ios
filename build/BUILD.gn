# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/ios/rules.gni")
import("//build/ohos.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")
import("//foundation/arkui/ace_engine/interfaces/napi/kits/napi_lib.gni")
import("//plugins/plugin_lib.gni")
import("config.gni")

# Install packages
group("ace_packages") {
  deps = [
    ":ace_ios",
    ":create_ios_framework",
  ]
}

# combine framework and xcframework
ohos_combine_darwin_framework("libace_ios") {
  deps = [ ":ace_ios" ]

  _export_framework_headers = [
    "$ace_root/adapter/ios/entrance/Ace.h",
    "$ace_root/adapter/ios/entrance/AceViewController.h",
    "$flutter_root/engine/flutter/shell/platform/darwin/ios/framework/Headers/FlutterPlugin.h",
    "$ace_root/adapter/ios/capability/bridge/BridgePlugin.h",
    "$ace_root/adapter/ios/capability/bridge/ResultValue.h",
    "$ace_root/adapter/ios/capability/bridge/MethodData.h",
  ]

  subsystem_name = "arkui"
  part_name = "ace_engine_cross"
}

common_napi_modules = []

foreach(module, common_napi_libs) {
  module_path_names = []
  module_path_names = string_split(module, "/")
  prefix_dir = module_path_names[0]

  module_path = prefix_dir
  if (prefix_dir != module) {
    module_path = module_path_names[1]
  }

  target_name_ext = string_replace(module_path, "_", "")

  common_napi_modules += [
    "$ace_root/interfaces/napi/kits/$module_path:${target_name_ext}_static_ios",
  ]
}

common_plugin_modules = []

foreach(module, common_plugin_libs) {
  plugin_lib(module) {
    platform = "ios"
  }
  module_name = string_replace(module, "_", "")
  module_name = string_replace(module_name, "/", "_")
  common_plugin_modules += [ ":$module_name" ]
}

# libace target
ohos_shared_library("ace_ios") {
  ldflags = [
    "-Wl",
    "-install_name",
    "@rpath/libace_ios.framework/libace_ios",
  ]

  deps = [
    "$ace_root/build:libace_static_ios",
    "//foundation/appframework/icu_data:icu_data_static",
    "//third_party/jsoncpp:jsoncpp_static",
  ]
  deps += common_napi_modules
  deps += common_plugin_modules
  if (defined(ark_engine)) {
    deps += [
      "//arkcompiler/runtime_core/libpandabase:libarkbase_static",
      "//arkcompiler/runtime_core/libpandafile:libarkfile_static",

      # for enable debugger
      "//arkcompiler/toolchain/inspector:ark_debugger_static",
      "//arkcompiler/toolchain/tooling:libark_ecma_debugger_set",
    ]
  }
  libs = [ "$root_out_dir/libicudata/ios/libicudata.a" ]

  cflags_cc += [
    "-Wall",
    "-frtti",
  ]

  part_name = "ace_engine_cross"
  subsystem_name = "arkui"
}
