# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")

# build static
template("ace_osal_ios_source_set") {
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    defines += invoker.defines

    sources = [
      "ace_engine_ext.cpp",
      "drag_window.cpp",
      "event_report.cpp",
      "exception_handler.cpp",
      "fake_accessibility_manager.cpp",
      "fetch_manager.cpp",
      "file_asset_provider.cpp",
      "frame_report.cpp",
      "frame_trace_adapter_impl.cpp",
      "ios_trace.cpp",
      "layout_inspector.cpp",
      "log_wrapper.cpp",
      "mouse_style_ios.cpp",
      "pixel_map_ios.cpp",
      "resource_adapter_impl.cpp",
      "resource_convertor.cpp",
      "resource_theme_style.cpp",
      "response_data.cpp",
      "ressched_report.cpp",
      "subwindow.cpp",
      "system_properties.cpp",
    ]

    cflags_cc = [
      "-DNAME_MAX=128",
      "-Wno-inconsistent-dllimport",
    ]

    include_dirs = [
      "//commonlibrary/c_utils/base/include",
      "$ace_root/adapter/ios/entrance/",
      "//third_party/flutter/engine/",
    ]

    deps = [ "//third_party/curl:curl" ]

    deps += [
      "$ace_root/frameworks/core/components/theme:build_theme_code",
      "//foundation/appframework/resource_management:global_resmgr",
    ]

    configs = [
      "$ace_root:ace_config",
      "//foundation/multimedia/image_framework/interfaces/innerkits:image_external_config",
    ]
  }
}

foreach(item, ace_platforms) {
  platform = item.name
  if (platform == "ios") {
    ace_osal_ios_source_set("ace_osal_" + item.name) {
      defines = []
      config = {
      }

      if (defined(item.config)) {
        config = item.config
      }
      if (defined(config.defines)) {
        defines = config.defines
      }
    }
  }
}
