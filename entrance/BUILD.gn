# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/ace/ace_engine/ace_config.gni")

# build static
template("ace_ios_standard_source_set") {
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    defines += invoker.defines
    cflags_cc += invoker.cflags_cc

    include_dirs = [
      "//third_party/",
      "//third_party/flutter",
      "//third_party/flutter/engine",
      "//third_party/flutter/skia",

      # "//third_party/icu/icu4c/source/common",
      "//third_party/flutter/engine/flutter/shell/platform/darwin/common/framework/Headers",
      "//third_party/flutter/engine/flutter/shell/platform/darwin/ios/framework/Headers",
      "//third_party/flutter/engine/flutter/shell/common",
      "//foundation/ace/ace_engine/frameworks",
      "//foundation/ace/ace_engine",

      # "//foundation/ace/ace_engine/adapter/ios/entrance",
      "//foundation/ace/ace_engine/adapter/ios/entrance/resource",
      "//foundation/ace/ace_engine/adapter/ios/capability/texture",
      "//foundation/ace/ace_engine/adapter/ios/capability/video",
      "//foundation/ace/ace_engine/adapter/ios/capability/camera",
    ]

    sources = [
      "AceViewController.mm",
      "ace_application_info_impl.cpp",
      "ace_bridge.mm",
      "ace_container.cpp",
      "ace_resource_register.cpp",
      "capability_registry.cpp",
      "flutter_ace_view.cpp",
    ]

    if (target_cpu == "arm64") {
      defines += [ "_ARM64_" ]
    }

    configs = [ "$ace_root:ace_config" ]

    cflags_objc = [ "-fvisibility=default" ]

    cflags_objcc = cflags_objc

    deps = [
      "$ace_flutter_engine_root:third_party_flutter_engine_$platform",
      "$ace_flutter_engine_root/skia:ace_skia_$platform",
      "$ace_root/adapter/ios/capability:ace_capability_ios",
      "$ace_root/adapter/ios/entrance/resource:resource",
      "$ace_root/frameworks/core/components/theme:build_theme_code",
    ]
  }
}

foreach(item, ace_platforms) {
  platform = item.name
  if (platform == "ios") {
    ace_ios_standard_source_set("ace_ios_entrance") {
      platform = item.name
      defines = []
      cflags_cc = []
      config = {
      }

      if (defined(item.config)) {
        config = item.config
      }

      if (defined(config.defines)) {
        defines = config.defines
      }

      if (defined(config.cflags_cc)) {
        cflags_cc = config.cflags_cc
      }
    }
  }
}
